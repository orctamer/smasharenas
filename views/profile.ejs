<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <% if (owner) { %>
  <title>Arena | <%=owner.displayName %></title>
  <% } %>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bulma/0.9.0/css/bulma.min.css">
  <link rel="stylesheet" href="../style.css">
  <script src="https://cdn.jsdelivr.net/npm/vue"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.2/axios.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/socket.io-client@2/dist/socket.io.js"></script>
</head>

<body>
  <%- include('navbar', {user:user}); %>
  <div id="app">
    <section class="hero is-black has-text-centered">
      <div class="hero-body">
        <% if (owner) { %>
        <figure class="image is-128x128 is-inline-block">
          <img style="border: 4px solid #f14668" class="is-rounded" src=<%=owner.profileImage%> />
        </figure>
        <h1 class="title"><%=owner.displayName %>'s Arena</h1>
        <% } %>
      </div>
    </section>
    <% if (user) { %>
    <% if (owner.twitchId == user.twitchId) { %>
      <section class="section">
    <div class="container">
      <h1 class="title">Admin Panel</h1>
      <div class="field">
      <label class="label">Room Name</label>
      <input class="input">
      <label class="label">Room Password</label>
      <input class="input">
            </div>
      <div class="field ">
      <button class="button is-link">Update Room</button>
      <button class="button is-danger">Clear Arena</button>
    </div>
    </div>
  </section>
    <% } %>     
    <% } %>


    <section class="mt-6 container has-text-centered">
      <div class="columns">
        <div class="column is-offset-one-quarter">
        <label class="label">Arena Room</label>
      <table style="width: 100%" class="table is-bordered">
        <thead>
          <tr>
            <th>#</th>
            <th>User</th>
            <th>Name</th>
            <th>Icon</th>
          </tr>
        </thead>
        <tbody>
        <tr v-for="(list, index) of messages">
        <th>{{index + 1}}</th>
        <th>{{list.nickname || list.user}}</th>
        <th>{{list.character}}</th>
        <th><img width="40px" :src="'../icons/'+chars.find(char => char.name == list.character).image" /></th>
        </tr>
        </tbody>
      </table>
        </div>
        <div class="column">
        <% if (!user) { %>
         <div class="section">
          <h1 class="title">
          Welcome Guest!
          </h1>
          <h2 class="subtitle">
          In order to join the arena you must login
          </h2>
         <a href="../auth/login"> <button class="button is-link">Login</button> </a>
         </div>
        <% } %>
        <% if (user) { %>
      <div class="field" style="width: 264px">
      <label class="label">Smash Name</label>
      <div class="control">
        <input v-model="nickname" class="input" type="text" placeholder="Optional">
      </div>
      </div>
      <div class="field has-addons">
        <div class="control">
          <div class="select">
            <select v-model="character">
              <option disabled value="">Choose a Character</option>
              <option v-for="char of chars">{{char.name}}</option>
            </select>
          </div>
        </div>
        <div class="control">
          <button @click="send()" class="button is-dark">Submit</button>
        </div>
      </div>
        </div>
      </div>        
        <% } %>
    </section>

  </div>
</body>
<script>
  var app = new Vue({
    el: '#app',
    data: {
      chars: [],
      message: null,
      newMessage: null,
      user: null,
      character: 'Banjo & Kazooie',
      messages: [],
      nickname: null
    },
    created() {
      <% if (user) { %>
      this.user = '<%=user.displayName %>'
      <% } %>
      const socket = io('http://localhost:3000');
      socket.on('room', (data) => {
        this.messages.push({
          message: data.message,
          user: data.user,
          character: data.character
        })
      })
    },
    mounted() {
      axios.get('../charList.json')
        .then(response => (this.chars = response.data.fighters))
    },
    methods: {
      send() {
        let checkUser = this.messages.find(x => x.user == this.user);
        if (checkUser) {
          var index = this.messages.indexOf(checkUser)
          if (index !== -1) {
          return this.messages.splice(index, 1, {
              user: this.user,
              character: this.character,
              nickname: this.nickname
            })
          }
        }
        this.messages.push({
          user: this.user,
          character: this.character,
          nickname: this.nickname
        })
      }
    }
  })
</script>

</html>